
BASE_DIR     = ${HOME}/.local
BASE_BIN_DIR = ${BASE_DIR}/bin

#	All scripts will be installed in this subdir
#	and linked from the parent. This will allow 
#	for the uninstallation of everything!
APPS_SUBDIR  = ccls_sequencing

#	There is a difference between 34 and 35.  I don't know exactly what it is
#	but 35 finds nothing and 34 finds a bunch.  Perhaps a change in parameters?
#	34 also requires a few tweeks just to get it to compile? (34 is 5 years older than 35)
#BLAT    = blatSrc34

#	for some reason 2.2.25+ seems to be installed?
#BLAST   = ncbi-blast-2.2.27+-src/c++

#BOWTIE  = bowtie-0.12.8

#	There are newer versions of bowtie2 out, but seg faults at runtime
#	I just installed that latest binaries which do not.
#	bowtie2-2.1.0
BOWTIE2 = bowtie2-2.0.0-beta7

#	There is an even newer version of trinity
#TRINITY = trinityrnaseq_r2012-06-08
#TRINITY = trinityrnaseq_r2012-10-05

BWA = bwa-0.6.2
PRICE = PriceSource120527
RAY = Ray-20121031
VELVET = Velvet-20121031

#	mkdir will raise error if dir exists
#	mkdir -p will not and would create full path
MKDIR        = mkdir -p


#	In the preferred compilation order ...
#
#	could eventually add Vicuna and Mira
#
#
#	As this is outdated and we don't (not allowed to) install these
#	anymore, removing them from list to avoid accidents.
#
#TARGETS = blat bowtie bowtie2 blast bwa trinity price velvet ray
#TARGETS = bowtie2 bwa price velvet ray
TARGETS = 


#	the @ prefix means the line will be executed, but not printed


#	Do I need the &&s?  Why not just multiple lines?
#	The &&s are a condition so if the first part fails, the next will NOT run.
#	Each line is its own thing so if a cd is used, needs to be same line.


#	all is the default target that is used when none are given
#all: blat bowtie bowtie2 blast bwa trinity price
#all: bowtie2 bwa price
all: make-all $(TARGETS)
	@printf "\nDONE MAKING ALL\n\n"

make-all:
	@printf "\nMAKING ALL\n\n"

#install: all
#install: install_all install_bowtie install_bowtie2 install_blat install_blast install_trinity install_bwa install_price install_scripts
#install: install_all install_bowtie install_bowtie2 install_blat install_bwa install_price install_scripts
install: install-all $(TARGETS:%=install-%) install-scripts
	@printf "\nDONE INSTALLING ALL\n\n"
	@printf "Add  $(BASE_BIN_DIR) TO YOUR PATH\n\n"

install-all:
	@printf "\nINSTALLING ALL\n\n"
	$(MKDIR) $(BASE_BIN_DIR)/$(APPS_SUBDIR)


ultra-clean-scripts:
	@printf "\nARCHIVING ALL PREVIOUSLY INSTALLED CCLS SCRIPTS\n\n"
	$(MKDIR) $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts
	#	moving to a subdir rather than deleting, just in case
	#	sadly, move fails if source file doesn't exist
	#	Appending the line with "; true" makes make ignore the error.
	mv $(BASE_BIN_DIR)/1000genomes_group_multiple_samples.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/1000genomes_group_results.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/add_descriptions_to_results.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/align_herv_k113_chimerics_to_index.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/archive.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/aws_1000genomes.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/aws_bam_to_herv_k113_overlappers.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/aws_exec_on_all.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/aws_fastq_to_herv_k113_overlappers.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/aws_remove_1000genomes_pid_files.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/aws_sqs_demo.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/aws_start_1000genomes_node.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/aws_start_1000genomes_processing.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bioruby_extract_sequences_from_fasta.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bioruby_extract_uniq_sequences_from_fasta.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bioruby_fasta_extractor.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bioruby_fastq_2_fasta.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bioruby_file_format_detector.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bioruby_lane_fasta.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bioruby_lane_fastq.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bioruby_random_fasta_generator.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bioruby_select_random_sequences_from_fasta.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bioruby_split_fasta_file.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blast_check.gawk $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blast_check.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blastn_check.gawk $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blastn_check.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blastn_cleanup.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blastn_cleanup.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blastn_nt.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blastn_to_sqlite_db.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blastn_wrapper.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blatoutcandidate.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/blatoutcandidate.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/bowtie_human_genomic.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/candidate_non_human.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/candidate_non_human.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/check_sequence_names.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/chopreads.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/clean_fasta_file.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/compress.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/dark.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/dark_OLD.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/ec_blastn_merge.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/ec_fasta_split_and_blast.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/ec_fasta_split_and_blastn.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/ec_fasta_split_and_bowtie.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/ec_quick_dark.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/fasta_read_length_filter.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/fasta_read_split.awk $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/fasta_read_split.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/fasta_size_split.awk $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/fasta_size_split.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/fastq2fasta.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/file_format_detector.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/herv_adjacent_comparison.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/herv_k113_integration.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/herv_trim_comparison.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/human_genomic_fasta_to_bowtie_index.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/insertion_points_to_table.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/just_first_contig_match_results.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/lines_not_in_reference_list.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/modify_trinity_output.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/overlapper_insertion_points_to_fasta.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/overlapper_seeker.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/overlappers_reference_to_table.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/overlappers_to_table.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/pieces_check.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/pieces_merge.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/positions_within_10bp.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/positions_within_10bp_of_reference.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/pull_reads_fasta.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/pull_reads_fasta.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/quick_dark.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/remove_N_reads_from_fasta.awk $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/remove_N_reads_from_fasta.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/remove_human_with_bowtie2.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/rins.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/rins.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/rins_ccls_lib.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/sam2names.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/sam2names.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/sam_to_bam.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/samtools_bam_to_fasta.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/samtools_bam_to_paired_fastq.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/samtools_depth_comparison.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/samtools_extract_aligned_reads.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/samtools_extract_and_clip_chimeric_reads.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/samtools_extract_half_mapped_pairs.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/select_no_hits_from_blast.awk $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/select_no_hits_from_blast.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/sequencing_lib.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/simple_queue.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/simple_queue_cron.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/simple_queue_eval.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/simple_queue_pop_to_script.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/spacify_sequence_names.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_bam2fastx_fastq.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_blast.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_blastn_to_nt.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_bowtie2.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_ec_quick_dark.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_fastq_to_fasta.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_fastx_collapser.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_gunzip.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_herv_k113_integration.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_lane_fastq.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_overlapper_seeker.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_samtools_bam2fq.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_samtools_bam_to_paired_fastq.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_samtools_depth_comparison.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_samtools_extract_aligned_reads.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_samtools_extract_and_clip_chimeric_reads.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_samtools_extract_half_mapped_pairs.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_samtools_sam_to_bam.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_samtools_sort_bam_by_name.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/srun_trinity.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/to_table.gawk $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/trim_alignments_and_descriptions.awk $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/trim_alignments_and_descriptions.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/underscore_sequence_names.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/uniquify_sequence_names.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/write_result.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
	mv $(BASE_BIN_DIR)/write_result.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)_make_ultra-clean-scripts/; true
#	rm -f $(BASE_BIN_DIR)/1000genomes_group_multiple_samples.sh
#	rm -f $(BASE_BIN_DIR)/1000genomes_group_results.sh
#	rm -f $(BASE_BIN_DIR)/add_descriptions_to_results.rb
#	rm -f $(BASE_BIN_DIR)/align_herv_k113_chimerics_to_index.sh
#	rm -f $(BASE_BIN_DIR)/archive.sh
#	rm -f $(BASE_BIN_DIR)/aws_1000genomes.sh
#	rm -f $(BASE_BIN_DIR)/aws_bam_to_herv_k113_overlappers.sh
#	rm -f $(BASE_BIN_DIR)/aws_exec_on_all.sh
#	rm -f $(BASE_BIN_DIR)/aws_fastq_to_herv_k113_overlappers.sh
#	rm -f $(BASE_BIN_DIR)/aws_remove_1000genomes_pid_files.sh
#	rm -f $(BASE_BIN_DIR)/aws_sqs_demo.sh
#	rm -f $(BASE_BIN_DIR)/aws_start_1000genomes_node.sh
#	rm -f $(BASE_BIN_DIR)/aws_start_1000genomes_processing.sh
#	rm -f $(BASE_BIN_DIR)/bioruby_extract_sequences_from_fasta.rb
#	rm -f $(BASE_BIN_DIR)/bioruby_extract_uniq_sequences_from_fasta.rb
#	rm -f $(BASE_BIN_DIR)/bioruby_fasta_extractor.rb
#	rm -f $(BASE_BIN_DIR)/bioruby_fastq_2_fasta.rb
#	rm -f $(BASE_BIN_DIR)/bioruby_file_format_detector.rb
#	rm -f $(BASE_BIN_DIR)/bioruby_lane_fasta.rb
#	rm -f $(BASE_BIN_DIR)/bioruby_lane_fastq.rb
#	rm -f $(BASE_BIN_DIR)/bioruby_random_fasta_generator.rb
#	rm -f $(BASE_BIN_DIR)/bioruby_select_random_sequences_from_fasta.rb
#	rm -f $(BASE_BIN_DIR)/bioruby_split_fasta_file.rb
#	rm -f $(BASE_BIN_DIR)/blast_check.gawk
#	rm -f $(BASE_BIN_DIR)/blast_check.sh
#	rm -f $(BASE_BIN_DIR)/blastn_check.gawk
#	rm -f $(BASE_BIN_DIR)/blastn_check.sh
#	rm -f $(BASE_BIN_DIR)/blastn_cleanup.pl
#	rm -f $(BASE_BIN_DIR)/blastn_cleanup.rb
#	rm -f $(BASE_BIN_DIR)/blastn_nt.sh
#	rm -f $(BASE_BIN_DIR)/blastn_to_sqlite_db.sh
#	rm -f $(BASE_BIN_DIR)/blastn_wrapper.sh
#	rm -f $(BASE_BIN_DIR)/blatoutcandidate.pl
#	rm -f $(BASE_BIN_DIR)/blatoutcandidate.rb
#	rm -f $(BASE_BIN_DIR)/bowtie_human_genomic.sh
#	rm -f $(BASE_BIN_DIR)/candidate_non_human.pl
#	rm -f $(BASE_BIN_DIR)/candidate_non_human.rb
#	rm -f $(BASE_BIN_DIR)/check_sequence_names.rb
#	rm -f $(BASE_BIN_DIR)/chopreads.pl
#	rm -f $(BASE_BIN_DIR)/clean_fasta_file.rb
#	rm -f $(BASE_BIN_DIR)/compress.pl
#	rm -f $(BASE_BIN_DIR)/dark.rb
#	rm -f $(BASE_BIN_DIR)/dark_OLD.rb
#	rm -f $(BASE_BIN_DIR)/ec_blastn_merge.sh
#	rm -f $(BASE_BIN_DIR)/ec_fasta_split_and_blast.sh
#	rm -f $(BASE_BIN_DIR)/ec_fasta_split_and_blastn.sh
#	rm -f $(BASE_BIN_DIR)/ec_fasta_split_and_bowtie.sh
#	rm -f $(BASE_BIN_DIR)/ec_quick_dark.sh
#	rm -f $(BASE_BIN_DIR)/fasta_read_length_filter.sh
#	rm -f $(BASE_BIN_DIR)/fasta_read_split.awk
#	rm -f $(BASE_BIN_DIR)/fasta_read_split.sh
#	rm -f $(BASE_BIN_DIR)/fasta_size_split.awk
#	rm -f $(BASE_BIN_DIR)/fasta_size_split.sh
#	rm -f $(BASE_BIN_DIR)/fastq2fasta.pl
#	rm -f $(BASE_BIN_DIR)/file_format_detector.rb
#	rm -f $(BASE_BIN_DIR)/herv_adjacent_comparison.sh
#	rm -f $(BASE_BIN_DIR)/herv_k113_integration.sh
#	rm -f $(BASE_BIN_DIR)/herv_trim_comparison.sh
#	rm -f $(BASE_BIN_DIR)/human_genomic_fasta_to_bowtie_index.sh
#	rm -f $(BASE_BIN_DIR)/insertion_points_to_table.sh
#	rm -f $(BASE_BIN_DIR)/just_first_contig_match_results.rb
#	rm -f $(BASE_BIN_DIR)/lines_not_in_reference_list.sh
#	rm -f $(BASE_BIN_DIR)/modify_trinity_output.pl
#	rm -f $(BASE_BIN_DIR)/overlapper_insertion_points_to_fasta.sh
#	rm -f $(BASE_BIN_DIR)/overlapper_seeker.sh
#	rm -f $(BASE_BIN_DIR)/overlappers_reference_to_table.sh
#	rm -f $(BASE_BIN_DIR)/overlappers_to_table.sh
#	rm -f $(BASE_BIN_DIR)/pieces_check.sh
#	rm -f $(BASE_BIN_DIR)/pieces_merge.sh
#	rm -f $(BASE_BIN_DIR)/positions_within_10bp.sh
#	rm -f $(BASE_BIN_DIR)/positions_within_10bp_of_reference.sh
#	rm -f $(BASE_BIN_DIR)/pull_reads_fasta.pl
#	rm -f $(BASE_BIN_DIR)/pull_reads_fasta.rb
#	rm -f $(BASE_BIN_DIR)/quick_dark.sh
#	rm -f $(BASE_BIN_DIR)/remove_N_reads_from_fasta.awk
#	rm -f $(BASE_BIN_DIR)/remove_N_reads_from_fasta.sh
#	rm -f $(BASE_BIN_DIR)/remove_human_with_bowtie2.sh
#	rm -f $(BASE_BIN_DIR)/rins.pl
#	rm -f $(BASE_BIN_DIR)/rins.rb
#	rm -f $(BASE_BIN_DIR)/rins_ccls_lib.rb
#	rm -f $(BASE_BIN_DIR)/sam2names.pl
#	rm -f $(BASE_BIN_DIR)/sam2names.rb
#	rm -f $(BASE_BIN_DIR)/sam_to_bam.sh
#	rm -f $(BASE_BIN_DIR)/samtools_bam_to_fasta.sh
#	rm -f $(BASE_BIN_DIR)/samtools_bam_to_paired_fastq.sh
#	rm -f $(BASE_BIN_DIR)/samtools_depth_comparison.sh
#	rm -f $(BASE_BIN_DIR)/samtools_extract_aligned_reads.sh
#	rm -f $(BASE_BIN_DIR)/samtools_extract_and_clip_chimeric_reads.sh
#	rm -f $(BASE_BIN_DIR)/samtools_extract_half_mapped_pairs.sh
#	rm -f $(BASE_BIN_DIR)/select_no_hits_from_blast.awk
#	rm -f $(BASE_BIN_DIR)/select_no_hits_from_blast.sh
#	rm -f $(BASE_BIN_DIR)/sequencing_lib.rb
#	rm -f $(BASE_BIN_DIR)/simple_queue.sh
#	rm -f $(BASE_BIN_DIR)/simple_queue_cron.sh
#	rm -f $(BASE_BIN_DIR)/simple_queue_eval.sh
#	rm -f $(BASE_BIN_DIR)/simple_queue_pop_to_script.sh
#	rm -f $(BASE_BIN_DIR)/spacify_sequence_names.rb
#	rm -f $(BASE_BIN_DIR)/srun_bam2fastx_fastq.sh
#	rm -f $(BASE_BIN_DIR)/srun_blast.sh
#	rm -f $(BASE_BIN_DIR)/srun_blastn_to_nt.sh
#	rm -f $(BASE_BIN_DIR)/srun_bowtie2.sh
#	rm -f $(BASE_BIN_DIR)/srun_ec_quick_dark.sh
#	rm -f $(BASE_BIN_DIR)/srun_fastq_to_fasta.sh
#	rm -f $(BASE_BIN_DIR)/srun_fastx_collapser.sh
#	rm -f $(BASE_BIN_DIR)/srun_gunzip.sh
#	rm -f $(BASE_BIN_DIR)/srun_herv_k113_integration.sh
#	rm -f $(BASE_BIN_DIR)/srun_lane_fastq.sh
#	rm -f $(BASE_BIN_DIR)/srun_overlapper_seeker.sh
#	rm -f $(BASE_BIN_DIR)/srun_samtools_bam2fq.sh
#	rm -f $(BASE_BIN_DIR)/srun_samtools_bam_to_paired_fastq.sh
#	rm -f $(BASE_BIN_DIR)/srun_samtools_depth_comparison.sh
#	rm -f $(BASE_BIN_DIR)/srun_samtools_extract_aligned_reads.sh
#	rm -f $(BASE_BIN_DIR)/srun_samtools_extract_and_clip_chimeric_reads.sh
#	rm -f $(BASE_BIN_DIR)/srun_samtools_extract_half_mapped_pairs.sh
#	rm -f $(BASE_BIN_DIR)/srun_samtools_sam_to_bam.sh
#	rm -f $(BASE_BIN_DIR)/srun_samtools_sort_bam_by_name.sh
#	rm -f $(BASE_BIN_DIR)/srun_trinity.sh
#	rm -f $(BASE_BIN_DIR)/to_table.gawk
#	rm -f $(BASE_BIN_DIR)/trim_alignments_and_descriptions.awk
#	rm -f $(BASE_BIN_DIR)/trim_alignments_and_descriptions.sh
#	rm -f $(BASE_BIN_DIR)/underscore_sequence_names.rb
#	rm -f $(BASE_BIN_DIR)/uniquify_sequence_names.rb
#	rm -f $(BASE_BIN_DIR)/write_result.pl
#	rm -f $(BASE_BIN_DIR)/write_result.rb

uninstall: uninstall-scripts

uninstall-scripts:
	@printf "\nUNINSTALLING SCRIPTS\n\n"
	cd $(BASE_BIN_DIR); \
		find . -lname $(APPS_SUBDIR)/\* -depth 1 -exec rm {} \;
	rm -rf $(BASE_BIN_DIR)/$(APPS_SUBDIR)


#	Remove old stuff.  Need -f or get an error.
install-scripts: uninstall-scripts
	$(MKDIR) $(BASE_BIN_DIR)/$(APPS_SUBDIR)
	@printf "\nINSTALLING SCRIPTS\n\n"
	cp rins_ccls/*.gawk $(BASE_BIN_DIR)/$(APPS_SUBDIR)/
	cp rins_ccls/*.awk $(BASE_BIN_DIR)/$(APPS_SUBDIR)/
	cp rins_ccls/*.pl $(BASE_BIN_DIR)/$(APPS_SUBDIR)/
	cp rins_ccls/*.rb $(BASE_BIN_DIR)/$(APPS_SUBDIR)/
	cp rins_ccls/*.sh $(BASE_BIN_DIR)/$(APPS_SUBDIR)/

	cd $(BASE_BIN_DIR); \
	for file in `find $(APPS_SUBDIR) -type f` ; do \
		echo $$file; \
		ln -s $$file; \
	done

#	cp rins_ccls/*awk $(BASE_BIN_DIR)
#	*awk would include *.awk and *.gawk
#	using latest trinity which DOES not need this
#	cp SAM_filter_out_unmapped_reads.pl $(BASE_BIN_DIR)/util/


#clean: clean_blat clean_bwa clean_trinity clean_price
#clean: clean_blat clean_bwa clean_price
clean: clean-all $(TARGETS:%=clean-%)
	@printf "\nDONE CLEANING\n\n"

clean-all:
	@printf "\nCLEANING ALL\n\n"
#	rins nothing to clean
#	ccls nothing to clean


#blat:
#	@printf "\nMAKING BLAT\n\n"
#	cd $(BLAT) && $(MKDIR) bin && make C_INCLUDE_PATH=/opt/local/include/ PNGLIB=/opt/local/lib/libpng.a BINDIR=`pwd`/bin
#
#install-blat:
#	@printf "\nINSTALLING BLAT\n\n"
#	cp $(BLAT)/bin/* $(BASE_BIN_DIR)
#
#clean-blat:
#	@printf "\nCLEANING BLAT\n\n"
#	cd $(BLAT) && make clean && rm -f */*/*.a



#bowtie:
#	@printf "\nMAKING BOWTIE\n\n"
#	cd $(BOWTIE) && make
#
#install-bowtie:
#	@printf "\nINSTALLING BOWTIE\n\n"
#	cd $(BOWTIE) && cp bowtie bowtie-build bowtie-inspect $(BASE_BIN_DIR)
#
#clean-bowtie:
#	@printf "\nCLEANING BOWTIE\n\n"
#	cd $(BOWTIE) && make clean



bowtie2:
	@printf "\nMAKING BOWTIE2\n\n"
	cd $(BOWTIE2) && make

install-bowtie2:
	@printf "\nINSTALLING BOWTIE2\n\n"
	cd $(BOWTIE2) && cp bowtie2 bowtie2-build bowtie2-align bowtie2-inspect $(BASE_BIN_DIR)

clean-bowtie2:
	@printf "\nCLEANING BOWTIE2\n\n"
	cd $(BOWTIE2) && make clean


#blast:
#	@printf "\nMAKING BLAST\n\n"
##	Use BASE_DIR as blast creates bin/, lib/ and include/
#	cd $(BLAST) && ./configure --prefix=$(BASE_DIR) && make
#
#install-blast:
#	@printf "\nINSTALLING BLAST\n\n"
#	cd $(BLAST) && make install
#
#clean-blast:
#	@printf "\nCLEANING BLAST\n\n"
#	/bin/rm -rf $(BLAST)/*-Debug*


#
#trinity:
#	@printf "\nMAKING TRINITY\n\n"
#	cd $(TRINITY) && make
#
#install-trinity:
#	@printf "\nINSTALLING TRINITY\n\n"
##	this works, but copies too much
##	cp -r $(TRINITY)/* $(BASE_BIN_DIR)
##	These more explicit copies still copy too much, and the links
##	considering using "cp -R" which will preserve the links
##	cp -r $(TRINITY)/Analysis $(BASE_BIN_DIR)
##	cp -r $(TRINITY)/Butterfly $(BASE_BIN_DIR)
##	cp -r $(TRINITY)/Chrysalis $(BASE_BIN_DIR)
##	cp -r $(TRINITY)/Inchworm $(BASE_BIN_DIR)
##	cp -r $(TRINITY)/PerlLib $(BASE_BIN_DIR)
##	cp -r $(TRINITY)/PerlLibAdaptors $(BASE_BIN_DIR)
##	cp -r $(TRINITY)/Trinity.pl $(BASE_BIN_DIR)
##	cp -r $(TRINITY)/trinity-plugins $(BASE_BIN_DIR)
##	cp -r $(TRINITY)/util $(BASE_BIN_DIR)
##	I highly recommend that you just add the trinity root directory to the PATH
#
#clean-trinity:
#	@printf "\nCLEANING TRINITY\n\n"
#	cd $(TRINITY) && make clean
#
##LICENSE
##Makefile
##README
##Release.Notes
##docs
##misc
##notes
#

#rins:
#	@printf "\nMAKING RINS WOULD BE NICE, BUT JUST SCRIPTS\n\n"
#
#ccls:
#	@printf "\nMAKING CCLS WOULD BE NICE, BUT JUST SCRIPTS\n\n"

bwa:
	@printf "\nMAKING BWA\n\n"
	cd $(BWA) && make

install-bwa:
	@printf "\nINSTALLING BWA\n\n"
	cp $(BWA)/bwa $(BASE_BIN_DIR)

clean-bwa:
	@printf "\nCLEANING BWA\n\n"
	cd $(BWA) && make clean



price:
	@printf "\nMAKING PRICE\n\n"
	cd $(PRICE) && make

install-price:
	@printf "\nINSTALLING PRICE\n\n"
	cp $(PRICE)/PriceTI $(BASE_BIN_DIR)

clean-price:
	@printf "\nCLEANING PRICE\n\n"
	cd $(PRICE) && make clean



#	The dir name is ray so 'make ray' will not run.
.PHONY: ray
ray:
	@printf "\nMAKING RAY\n\n"
	cd $(RAY) && make

install-ray:
	@printf "\nINSTALLING RAY\n\n"
	cp $(RAY)/Ray $(BASE_BIN_DIR)

clean-ray:
	@printf "\nCLEANING RAY\n\n"
	cd $(RAY) && make clean




velvet:
	@printf "\nMAKING VELVET\n\n"
	cd $(VELVET) && make

install-velvet:
	@printf "\nINSTALLING VELVET\n\n"
	cp $(VELVET)/velvet? $(BASE_BIN_DIR)

clean-velvet:
	@printf "\nCLEANING VELVET\n\n"
	cd $(VELVET) && make clean







test:
	@printf "\ntesting is nice, but not today\n\n"
#	cd $(BLAT) && make test
#	cd $(BLAST) && make test
#	cd $(BOWTIE) && make test
#	cd $(BOWTIE2) && make test
#	cd $(TRINITY) && make test
#	rins
#	ccls

